plugins=(
 colorize
 cp
 git
 history
 battery
 themes
 zsh-syntax-highlighting
 zsh-autosuggestions)




# My Aliases

# ssh
alias sshouredu="ssh root@172.104.224.197"
alias sshouredu2="ssh root@139.162.189.79"

#==============================================================

# docker
alias dcupd="docker-compose up -d"
alias dcdn="docker-compose down"

# docker inspect the and get the exposed IP from docker container to the host machine
dockerInspect() {
    if [ "$1" != "" ]
    then
    	docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $1
    else
        printf '%s ' 'please enter the container name: '
        read reply
        if [ "$reply" != "" ]
        then
            docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $reply
        fi
    fi
}

# docker exec command
dockerExec() {
    if [ "$1" != "" ]
    then
    	docker exec -it $1 bash
    else
        printf '%s ' 'please enter the container name: '
        read reply
        if [ "$reply" != "" ]
        then
            docker exec -it $reply bash
        fi
    fi
}

#==============================================================

# Kubernetes k8s

# generate a token to access k8s dashboard
alias generateK8sToken="kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep eks-admin | awk '{print $1}')"


# kubectl exec command, to get inside a pod
kubectlExec() {
    if [ "$1" != "" ]
    then
    	kubectl exec --stdin --tty $1 /bin/bash
    else
        printf '%s ' 'please enter the pod name: '
        read reply
        if [ "$reply" != "" ]
        then
            kubectl exec --stdin --tty $reply /bin/bash
        fi
    fi
}
#==============================================================

# Golang
alias go_test="go test -v --bench . --benchmem"


#==============================================================

# kafka
alias startkafka="kafka-server-start.sh config/server.properties"
alias startzookeeper="bin/zookeeper-server-start.sh config/zookeeper.properties"

#==============================================================

# git
alias pulldev="git pull origin dev"
alias push="git push"
alias status="git status"

#==============================================================

# open folders from terminal
alias open="nautilus ." 

#==============================================================

# GitHub CLI commands
# create a PR to the dev branch
alias prtodev="gh pr create -B dev"
alias prlist="gh pr list"

#==============================================================

# TODO enhance the script by using DRY in pushall() and commit()
# Git commands
pushall() {
    git add .
    if [ "$1" != "" ]
    then
        git commit -m $1
    else
        git commit -m update
    fi
    git push
}

# shortcut for git add command
add() {
    if [ "$1" != "" ]
    then
        git add $1
    else
        git add .
    fi
}

# shortcut for git commit command
commit() {
    if [ "$1" != "" ]
    then
        git commit -m "$1"
	printf $1
    else
        printf '%s ' 'please write a commit message: '
        read reply
        if [ "$reply" != "" ]
        then
            git commit -m "$reply"
        else
            git commit -m update
        fi
    fi
}
  
    
